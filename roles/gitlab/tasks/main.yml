- name: Installer Docker
  apt:
    name: docker.io
    state: present
    update_cache: yes

- name: Installer Docker Compose
  apt:
    name: docker-compose
    state: present

- name: Créer le répertoire pour le projet GitLab
  file:
    path: "/home/{{ ansible_user }}/gitlab"
    state: directory
    mode: '0755'

- name: Copier le Dockerfile pour créer l'image GitLab
  copy:
    src: ./files/Dockerfile
    dest: /home/{{ ansible_user }}/gitlab/Dockerfile
    mode: '0755'

- name: Copier le fichier docker-compose.yml
  copy:
    src: ./files/docker-compose.yml
    dest: /home/{{ ansible_user }}/gitlab/docker-compose.yml
    mode: '0755'

- name: Copier le fichier de configuration gitlab.rb.j2
  template:
    src: gitlab.rb.j2
    dest: /home/{{ ansible_user }}/gitlab/gitlab.rb
    mode: '0755'

- name: Afficher la configuration du docker-compose
  debug:
    var: compose_config_check.stdout

- name: Vérifier si le service Docker fonctionne
  service:
    name: docker
    state: started
    enabled: yes

- name: Lancer Docker Compose pour déployer GitLab
  command: docker-compose -f /home/{{ ansible_user }}/gitlab/docker-compose.yml up -d
  args:
    chdir: /home/{{ ansible_user }}/gitlab
  become: yes
  register: compose_output
  ignore_errors: yes

- name: Attendre que GitLab soit prêt
  wait_for:
    port: 80
    host: 127.0.0.1
    state: started
    delay: 60
    timeout: 300

    
- name: Réinitialiser le mot de passe root de GitLab
  shell: |
    docker exec -u root gitlab gitlab-rails runner "user = User.find_by(username: 'root'); user.update(password: 'SuperSecurePassword123', password_confirmation: 'SuperSecurePassword123')"
  register: reset_root_password

- name: Afficher le résultat de la réinitialisation du mot de passe root
  debug:
    var: reset_root_password
